<div class="max-w-4xl mx-auto py-6 sm:px-6 lg:px-8">
  <h1 class="text-3xl font-bold text-gray-900 mb-6">Your Profile</h1>

  <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
    <div class="px-4 py-5 sm:px-6 flex justify-between items-center">
      <div>
        <h3 class="text-lg leading-6 font-medium text-gray-900">
          User Information
        </h3>
        <p class="mt-1 max-w-2xl text-sm text-gray-500">
          Personal details and application.
        </p>
      </div>
      <button id="changeUsernameBtn" class="text-indigo-600 hover:text-indigo-900">
        <svg xmlns="http://www.w3.org/2000/svg" class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z" />
        </svg>
      </button>
    </div>
    <div class="border-t border-gray-200">
      <dl>
        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            Username
          </dt>
          <dd id="usernameDisplay" class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            {{user.username}}
          </dd>
        </div>
        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            Email address
          </dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            {{user.email}}
          </dd>
        </div>
        <div class="bg-gray-50 px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            Account created
          </dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            {{formatDate user.createdAt}}
          </dd>
        </div>
        <div class="bg-white px-4 py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            Friends
          </dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            {{user.friends.length}}
            <a href="/friends/list" class="ml-2 text-indigo-600 hover:text-indigo-900">View all</a>
          </dd>
        </div>
      </dl>
    </div>
  </div>

  <div class="bg-white shadow overflow-hidden sm:rounded-lg mt-6">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">
        Key Password
      </h3>
      <p class="mt-1 max-w-2xl text-sm text-gray-500">
        {{#if user.keyPasswordSet}}
          Change your key password
        {{else}}
          Set your key password
        {{/if}}
      </p>
    </div>
    <div class="border-t border-gray-200 px-4 py-5 sm:p-0">
      <dl class="sm:divide-y sm:divide-gray-200">
        <div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            {{#if user.keyPasswordSet}}
              Current status
            {{else}}
              Status
            {{/if}}
          </dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            {{#if user.keyPasswordSet}}
              Set
            {{else}}
              Not set
            {{/if}}
          </dd>
        </div>
        <div class="py-4 sm:py-5 sm:grid sm:grid-cols-3 sm:gap-4 sm:px-6">
          <dt class="text-sm font-medium text-gray-500">
            Action
          </dt>
          <dd class="mt-1 text-sm text-gray-900 sm:mt-0 sm:col-span-2">
            <button id="changeKeyPasswordBtn" class="inline-flex items-center px-3 py-2 border border-transparent text-sm leading-4 font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
              {{#if user.keyPasswordSet}}
                Change Key Password
              {{else}}
                Set Key Password
              {{/if}}
            </button>
          </dd>
        </div>
      </dl>
    </div>
  </div>

  <div class="bg-white shadow overflow-hidden sm:rounded-lg mb-6">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">
        Find Friends
      </h3>
      <div class="mt-4 flex">
        <input type="text" id="userSearchInput" class="shadow-sm focus:ring-indigo-500 focus:border-indigo-500 block w-full sm:text-sm border-gray-300 rounded-md" placeholder="Search for users">
        <button id="userSearchBtn" class="ml-3 inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500">
          Search
        </button>
      </div>
      <div id="searchResults" class="mt-4"></div>
    </div>
  </div>

  <div class="bg-white shadow overflow-hidden sm:rounded-lg">
    <div class="px-4 py-5 sm:px-6">
      <h3 class="text-lg leading-6 font-medium text-gray-900">
        Friend Requests
      </h3>
    </div>
    <div class="border-t border-gray-200">
      <ul id="friendRequestsList" class="divide-y divide-gray-200">
        {{#each user.friendRequests}}
          {{#if (eq this.status 'pending')}}
            <li class="px-4 py-4 flex items-center justify-between">
              <div class="text-sm font-medium text-gray-900">{{this.from.username}}</div>
              <div>
                <button class="acceptFriendRequest bg-green-500 hover:bg-green-600 text-white font-bold py-2 px-4 rounded mr-2" data-request-id="{{this._id}}">
                  Accept
                </button>
                <button class="declineFriendRequest bg-red-500 hover:bg-red-600 text-white font-bold py-2 px-4 rounded" data-request-id="{{this._id}}">
                  Decline
                </button>
              </div>
            </li>
          {{/if}}
        {{/each}}
      </ul>
    </div>
  </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
  const changeUsernameBtn = document.getElementById('changeUsernameBtn');
  const usernameDisplay = document.getElementById('usernameDisplay');
  const userSearchInput = document.getElementById('userSearchInput');
  const userSearchBtn = document.getElementById('userSearchBtn');
  const searchResults = document.getElementById('searchResults');
  const friendRequestsList = document.getElementById('friendRequestsList');

  changeUsernameBtn.addEventListener('click', function() {
    const newUsername = prompt('Enter new username:');
    if (newUsername) {
      fetch('/change-username', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ newUsername }),
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          usernameDisplay.textContent = data.newUsername;
          alert('Username updated successfully');
        } else {
          alert(data.error || 'Failed to update username');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while updating username');
      });
    }
  });

  userSearchBtn.addEventListener('click', function() {
    const query = userSearchInput.value;
    if (!query) {
      alert('Please enter a search query');
      return;
    }
    searchResults.innerHTML = '<div class="text-center"><div class="spinner"></div></div>';
    fetch(`/friends/search?query=${encodeURIComponent(query)}`)
      .then(response => response.json())
      .then(users => {
        searchResults.innerHTML = '';
        if (users.length === 0) {
          searchResults.innerHTML = '<p class="text-gray-500">No users found</p>';
        } else {
          const ul = document.createElement('ul');
          ul.className = 'divide-y divide-gray-200';
          users.forEach(user => {
            const li = document.createElement('li');
            li.className = 'px-4 py-4 flex items-center justify-between';
            li.innerHTML = `
              <div class="text-sm font-medium text-gray-900">${user.username}</div>
              <button class="sendFriendRequest bg-blue-500 hover:bg-blue-600 text-white font-bold py-2 px-4 rounded" data-username="${user.username}">
                Send Friend Request
              </button>
            `;
            ul.appendChild(li);
          });
          searchResults.appendChild(ul);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        searchResults.innerHTML = '<p class="text-red-500">An error occurred while searching for users</p>';
      });
  });

  searchResults.addEventListener('click', function(e) {
    if (e.target.classList.contains('sendFriendRequest')) {
      const recipientUsername = e.target.dataset.username;
      fetch('/friends/send-request', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ recipientUsername }),
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert('Friend request sent successfully');
          e.target.disabled = true;
          e.target.textContent = 'Request Sent';
        } else {
          alert(data.error || 'Failed to send friend request');
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert('An error occurred while sending friend request');
      });
    }
  });

  friendRequestsList.addEventListener('click', function(e) {
    if (e.target.classList.contains('acceptFriendRequest') || e.target.classList.contains('declineFriendRequest')) {
      const requestId = e.target.dataset.requestId;
      const action = e.target.classList.contains('acceptFriendRequest') ? 'accept' : 'decline';
      fetch(`/friends/${action}-request`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({ requestId }),
      })
      .then(response => response.json())
      .then(data => {
        if (data.success) {
          alert(`Friend request ${action}ed successfully`);
          e.target.closest('li').remove();
        } else {
          alert(data.error || `Failed to ${action} friend request`);
        }
      })
      .catch(error => {
        console.error('Error:', error);
        alert(`An error occurred while ${action}ing friend request`);
      });
    }
  });

  const changeKeyPasswordBtn = document.getElementById('changeKeyPasswordBtn');
  changeKeyPasswordBtn.addEventListener('click', function() {
    const action = this.textContent.trim().toLowerCase().startsWith('set') ? 'set' : 'change';
    const newKeyPassword = prompt(`Enter ${action === 'set' ? 'new' : 'updated'} key password:`);
    if (newKeyPassword) {
      const confirmMessage = action === 'change' 
        ? 'Warning: Changing your key password will result in the deletion of older messages. Are you sure you want to proceed?'
        : 'Are you sure you want to set this key password?';
      if (confirm(confirmMessage)) {
        fetch('/change-key-password', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ newKeyPassword }),
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            alert(`Key password ${action}d successfully`);
            location.reload();
          } else {
            alert(data.error || `Failed to ${action} key password`);
          }
        })
        .catch(error => {
          console.error('Error:', error);
          alert(`An error occurred while ${action}ing key password`);
        });
      }
    }
  });
});
</script>

<style>
.spinner {
  border: 4px solid #f3f3f3;
  border-top: 4px solid #3498db;
  border-radius: 50%;
  width: 30px;
  height: 30px;
  animation: spin 1s linear infinite;
  margin: 0 auto;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}
</style>

